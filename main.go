package main

import (
	"fmt"
	"log"
	"os"
	"strconv"
	"time"

	"github.com/joho/godotenv"
	tele "gopkg.in/telebot.v4"
)

var admin tele.ChatID

func init() {
	err := godotenv.Load()
	if err != nil {
		log.Fatalf("godotenv.Load: %s", err)
		return
	}
}

func main() {
	t, ok := os.LookupEnv("BOT_TOKEN")
	if !ok {
		log.Fatalf("bot token is empty")
		return
	}

	id, ok := os.LookupEnv("ADMIN_ID")
	if !ok {
		return
	}
	adminID, err := strconv.ParseInt(id, 10, 64)
	if err != nil {
		log.Fatalf("strconv.ParseInt: %s", err)
		return
	}

	pref := tele.Settings{
		Token: t,
		Poller: &tele.LongPoller{
			Timeout: time.Second,
			AllowedUpdates: []string{
				"message",
				"edit_message", // todo implement
			},
		},
	}
	bot, err := tele.NewBot(pref)
	if err != nil {
		log.Fatalf("tele.NewBot: %s", err)
		return
	}
	admin = tele.ChatID(adminID)

	bot.Handle("/start", onStart)
	bot.Handle(tele.OnText, onMessage)
	bot.Handle(tele.OnReply, onReply)

	bot.Start()

}

func onStart(c tele.Context) error {
	return c.Send("–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ù–∞–ø–∏—à–∏—Ç–µ –≤—Å–µ, —á—Ç–æ —Å—á–∏—Ç–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–º. –í—Å–µ, —á—Ç–æ –≤—ã –Ω–∞–ø–∏—à–µ—Ç–µ, —è –±–µ—Ä–µ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ü§ñ")
}

func onMessage(c tele.Context) error {
	if err := c.Bot().React(
		c.Chat(),
		c.Message(),
		tele.Reactions{
			Reactions: []tele.Reaction{{Emoji: "üëå", Type: "emoji"}}},
	); err != nil {
		log.Printf("tele.Reaction: %s", err)
	}

	if c.Sender().Recipient() == admin.Recipient() {
		return nil
	}

	return c.ForwardTo(admin)
}

func onReply(c tele.Context) error {
	if c.Message().ReplyTo == nil {
		return nil
	}
	if c.Message().ReplyTo.OriginalChat == c.Chat() {
		return nil
	}
	r := c.Message().ReplyTo
	msg := c.Message().Text

	// todo use ReplyTo (—á—Ç–æ–±—ã –Ω–∞ —Ç–æ–π —Å—Ç–æ—Ä–æ–Ω–µ –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ, –Ω–∞ –∫–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∏–ª–∏)
	// todo need originalMessageID . –ï—Å–ª–∏ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–∏—Å–∞—Ç—å—Å—è –≤ –±–¥ - –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞
	// –ª–æ–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–æ–π, —á—Ç–æ–±—ã –ø–æ id of forwarded message –≤ –∞–¥–º–∏–Ω —á–∞—Ç–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–ª—É—á–∏—Ç—å id –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	_, err := c.Bot().Send(r.OriginalSender, msg)
	if err != nil {
		return fmt.Errorf("onReply.Send: %s", err)
	}
	return c.Send("–æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
}
